@model FlatRent.Web.Models.ViewModels.MapViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <link href="~/Content/own/MapsStyles.css" rel="stylesheet" />
</head>
<body>
    <div id="map"></div>
    <script type="text/javascript">

        var map;
        function initMap() {
            var modelPoint = new google.maps.LatLng(@Model.Latitude.Replace(",","."), @Model.Longitude.Replace(",", "."));

            map = new google.maps.Map(document.getElementById('map'), {
                center: modelPoint,
                zoom: 18
            });
            var coordInfoWindow = new google.maps.InfoWindow();
            coordInfoWindow.setContent(createInfoWindowContent(modelPoint, map.getZoom()));
            coordInfoWindow.setPosition(modelPoint);
            coordInfoWindow.open(map);

            map.addListener('zoom_changed', function() {
                coordInfoWindow.setContent(createInfoWindowContent(modelPoint, map.getZoom()));
                coordInfoWindow.open(map);
            });
        }
        var TILE_SIZE = 256;

        function createInfoWindowContent(latLng, zoom) {
            var scale = 1 << zoom;

            var worldCoordinate = project(latLng);

            var pixelCoordinate = new google.maps.Point(
                Math.floor(worldCoordinate.x * scale),
                Math.floor(worldCoordinate.y * scale));

            var tileCoordinate = new google.maps.Point(
                Math.floor(worldCoordinate.x * scale / TILE_SIZE),
                Math.floor(worldCoordinate.y * scale / TILE_SIZE));

            return [
                'Address: ' + '@Model.Address',
                'Day Price: ' + '@Model.PriceForDay',
                'Month Price: ' + '@Model.PriceForMonth'
            ].join('<br>');
        }

        function project(latLng) {
            var siny = Math.sin(latLng.lat() * Math.PI / 180);

            // Truncating to 0.9999 effectively limits latitude to 89.189. This is
            // about a third of a tile past the edge of the world tile.
            siny = Math.min(Math.max(siny, -0.9999), 0.9999);

            return new google.maps.Point(
                TILE_SIZE * (0.5 + latLng.lng() / 360),
                TILE_SIZE * (0.5 - Math.log((1 + siny) / (1 - siny)) / (4 * Math.PI)));
        }

    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBPv28nNFi9vaIE74qhSfqdUhbGDqj0vyY&callback=initMap">
    </script>
</body>
</html>
